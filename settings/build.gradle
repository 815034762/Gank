apply from: "${rootProject.rootDir}/common_config.gradle"
if(project.ext.isSettingDebug){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        buildConfigField('boolean','base_debug','true')
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [ moduleName : project.getName() ]
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled =true
    }

    sourceSets {
        main {
            if (project.ext.isSettingDebug) {
                print("isSettingDebug ="+project.ext.isSettingDebug)
                manifest.srcFile 'src/debug/AndroidManifest.xml'

                res.srcDirs = ['src/debug/res','src/main/res']
            } else {
                print("isSettingDebug ="+project.ext.isSettingDebug)
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java{
                    srcDir 'src/main/java'
                }
//                resources {
//                    //排除java/debug文件夹下的所有文件
//                    exclude 'src/debug/*'
//                }
            }
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api project(':base')
    kapt 'com.alibaba:arouter-compiler:1.1.1'
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

kapt {
    generateStubs = true
    arguments {
        arg("moduleName",project.getName())
    }
}
repositories {
    mavenCentral()
}
